package helpMe

import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

import com.google.common.util.concurrent.AbstractFuture.Failure
import com.kms.katalon.core.annotation.Keyword
import com.kms.katalon.core.checkpoint.Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling
import com.kms.katalon.core.testcase.TestCase
import com.kms.katalon.core.testdata.TestData
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.testobject.TestObjectXpath
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI

import codecLib.mpa.e
import internal.GlobalVariable

import org.openqa.selenium.Keys as Keys
import org.openqa.selenium.WebDriver as WebDriver
import org.openqa.selenium.WebElement as WebElement
import org.openqa.selenium.interactions.Actions as Actions
import org.seleniumhq.jetty9.server.Authentication.Failed

import com.kms.katalon.core.webui.common.WebUiCommonHelper as WebUiCommonHelper
import com.kms.katalon.core.webui.driver.DriverFactory as DriverFactory
import org.openqa.selenium.JavascriptExecutor as JavascriptExecutor
import org.junit.internal.runners.statements.Fail
import org.openqa.selenium.By as By
import java.text.SimpleDateFormat as SimpleDateFormat

import javax.crypto.extObjectInputStream
import java.awt.Robot as Robot
import java.awt.event.KeyEvent as KeyEvent

import com.kms.katalon.core.testobject.ConditionType

public class helpers {

//This let's us click elements using javascript regardless of browser
	@Keyword
	def clickUsingJS(TestObject to, int timeout) {
		WebDriver driver = DriverFactory.getWebDriver()
		WebElement element = WebUiCommonHelper.findWebElement(to, timeout)
		JavascriptExecutor executor = ((driver) as JavascriptExecutor)
		executor.executeScript('arguments[0].click()', element)
	}

	@Keyword
    //Looks at the Browser - if it's Chrome, Tab,Tab,Tab, Enter (used when certs are untrusted in dev environments)
	def roboTabCertIssue() {
		if (DriverFactory.getExecutedBrowser().getName() == 'CHROME_DRIVER') {
			Robot rb = new Robot()
			int x = 1;
			while (x <= 3) {
				rb.keyPress(KeyEvent.VK_TAB)
				x++;
			}
			WebUI.delay(3)
			rb.keyPress(KeyEvent.VK_ENTER)
		}
	}


	@Keyword
    //count the number of rows of a TestObject (send it an HTML table or repeatable pattern of <div> tags)
	def countReturnedSearchResults(TestObject to, int timeout){
		WebDriver driver = DriverFactory.getWebDriver()
		List<WebElement> rows = driver.findElements(to, timeout)
		int count = rows.size()
		return count
	}

	@Keyword
    //date time stamp
	def callDate() {
		def dateNow = new Date()
		def sdf = new SimpleDateFormat('MM/dd/yyyy HH:mm:ss')
		return sdf.format(dateNow)
	}

	@Keyword
    //gets the xpath of a selection in a dropdown menu (especially important for Angular Materials mat-select stuff)      
	def getXpathOfDropDown(String path, String item, int timeout){

		WebDriver driver = DriverFactory.getWebDriver()
		List<WebElement> rows = driver.findElements(By.xpath(path))

		int x = rows.size()
		ArrayList<String> items = new ArrayList[x]

		int i = 0
		for (i = 0; i < x; i++){
			String drpXpath = path + "["+ (i+1) + "]/span"
			TestObject drpDown = new TestObject('drpDown').addProperty('xpath', ConditionType.EQUALS, drpXpath, true)
			String text = WebUI.getText(drpDown).trim()
			items[i] = text
			println(items[i])
		}

		int locationInDropDown = items.indexOf(item) + 1
		
		if (locationInDropDown == 0){
			throw new com.kms.katalon.core.exception.StepErrorException('Unable to find the xpath of ' + item);
		} else {
			String xPathConstructor = path + "["+ locationInDropDown + "]/span"
			println(xPathConstructor)
			return xPathConstructor
		}

	}
}
